version: 2

jobs:
  checkout_and_compile:
    docker:
      - image: circleci/node:10.16.0
        environment:
          NODE_OPTIONS: --max_old_space_size=8192
    resource_class: large
    working_directory: ~/set-protocol-v2
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: false
      - restore_cache:
          key: module-cache-{{ checksum "yarn.lock" }}
      - run:
          name: Set Up Environment Variables
          command: cp .env.default .env
      - run:
          name: Fetch Dependencies
          command: yarn install
      - save_cache:
          key: module-cache-{{ checksum "yarn.lock" }}
          paths:
            - node_modules
      - run:
          name: Transpile Contracts
          command: yarn build
      - save_cache:
          key: compiled-env-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - ~/set-protocol-v2
  test:
    docker:
      - image: circleci/node:10.16.0
    working_directory: ~/set-protocol-v2
    parallelism: 3
    resource_class: large
    steps:
      - setup_remote_docker:
          docker_layer_caching: false
      - run:
          name: Fetch solc version
          command: docker pull ethereum/solc:0.6.10
      - restore_cache:
          key: compiled-env-{{ .Environment.CIRCLE_SHA1 }}
      - run:
          name: Set Up Environment Variables
          command: cp .env.default .env
      - run:
          name: Test RPC
          command: yarn chain
          background: true
      - run:
          name: Hardhat Test
          command: |
            TEST_FILES="$(circleci tests glob "./test/**/*.spec.ts" | circleci tests split --split-by=timings)"
            yarn test ${TEST_FILES}

  coverage:
    docker:
      - image: circleci/node:10.11.0
    working_directory: ~/set-protocol-v2
    # When changing the parallelism value, you also
    # need to update the `persist_to_workspace` paths
    # in this job (below) as well as the list of files passed
    # to istanbul-combine in the `report_coverage` job
    parallelism: 5
    resource_class: large
    steps:
      - setup_remote_docker:
          docker_layer_caching: false
      - run:
          name: Fetch solc version
          command: docker pull ethereum/solc:0.6.10
      - restore_cache:
          key: compiled-env-{{ .Environment.CIRCLE_SHA1 }}
      - run:
          name: Set Up Environment Variables
          command: cp .env.default .env
      - run:
          name: Create shared coverage outputs & timings folders
          command: |
            mkdir -p /tmp/coverage
            mkdir ~/junit
      - run:
          name: Coverage
          command: |
            echo "<<<< Timings >>>>"
            cat $CIRCLE_INTERNAL_TASK_DATA/circle-test-results/results.json

            TEST_FILES="{$(circleci tests glob "${PWD}/test/**/*.spec.ts" | \
              circleci tests split --split-by=timings | xargs | \
              sed -e 's/ /,/g' | sed -e "s|$PWD/||g" ),}"
            yarn coverage --testfiles "$TEST_FILES"

            echo "<<<< test-results.xml >>>>"
            cat test-results.xml
      - run:
          name: Save coverage data
          command: |
            cp coverage.json /tmp/coverage/cov_$CIRCLE_NODE_INDEX.json
            chmod -R 777 /tmp/coverage/cov_$CIRCLE_NODE_INDEX.json
      - run:
          name: Save timings data
          command: |
            cp test-results.xml ~/junit/
          when: always
      - store_test_results:
          path: ~/junit
      - persist_to_workspace:
          root: /tmp/coverage
          paths:
            - cov_0.json
            - cov_1.json
            - cov_2.json
            - cov_3.json
            - cov_4.json

  report_coverage:
    docker:
      - image: circleci/node:10.11.0
    working_directory: ~/set-protocol-v2
    steps:
      - attach_workspace:
          at: /tmp/coverage
      - restore_cache:
          key: compiled-env-{{ .Environment.CIRCLE_SHA1 }}
      - run:
          name: Combine coverage reports
          command: |
            cp -R /tmp/coverage/* .
            npx istanbul-combine-updated -r lcov cov_0.json cov_1.json cov_2.json cov_3.json cov_4.json
      - run:
          name: Upload coverage
          command: |
            cat coverage/lcov.info | node_modules/.bin/coveralls

workflows:
  version: 2
  build-and-test:
    jobs:
      - checkout_and_compile
      - test:
          requires:
            - checkout_and_compile
      - coverage:
          requires:
            - checkout_and_compile
      - report_coverage:
          requires:
            - coverage
