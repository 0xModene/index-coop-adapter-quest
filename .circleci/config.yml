version: 2

jobs:
  install:
    docker:
      - image: circleci/node:10.16.0
    working_directory: ~/set-protocol-v2
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: false
      - restore_cache:
          key: module-cache-{{ checksum "yarn.lock" }}
      - run:
          name: Set Up Environment Variables
          command: cp .env.default .env
      - run:
          name: Fetch Dependencies
          command: yarn install
      - save_cache:
          key: module-cache-{{ checksum "yarn.lock" }}
          paths:
            - node_modules

  build:
    docker:
      - image: circleci/node:10.16.0
    working_directory: ~/set-protocol-v2
    steps:
      - checkout
      - restore_cache:
          key: module-cache-{{ checksum "yarn.lock" }}
      - run:
          name: Transpile Contracts
          command: yarn build
      - save_cache:
          key: compiled-env-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - ~/set-protocol-v2

  build_ovm:
    docker:
      - image: circleci/node:10.16.0
    working_directory: ~/set-protocol-v2
    steps:
      - checkout
      - restore_cache:
          key: module-cache-{{ checksum "yarn.lock" }}
      - run:
          name: Transpile OVM Contracts
          command: yarn build:ovm
      - save_cache:
          key: compiled-env-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - ~/set-protocol-v2
  test:
    docker:
      - image: circleci/node:10.16.0
    working_directory: ~/set-protocol-v2
    parallelism: 3
    steps:
      - restore_cache:
          key: compiled-env-{{ .Environment.CIRCLE_SHA1 }}
      - run:
          name: Set Up Environment Variables
          command: cp .env.default .env
      - run:
          name: Test RPC
          command: yarn chain
          background: true
      - run:
          name: Hardhat Test
          command: |
            TEST_FILES="$(circleci tests glob "./test/**/*.spec.ts" | circleci tests split --split-by=timings)"
            yarn test ${TEST_FILES}

  test_ovm:
    docker:
      - image: circleci/node:10.16.0
    working_directory: ~/set-protocol-v2
    parallelism: 3
    steps:
      - setup_remote_docker:
          docker_layer_caching: false
      - restore_cache:
          key: compiled-env-{{ .Environment.CIRCLE_SHA1 }}
      - run:
          name: Set Up Environment Variables
          command: cp .env.default .env
      # TODO....

  coverage:
    docker:
      - image: circleci/node:10.11.0
    working_directory: ~/set-protocol-v2
    # When changing the parallelism value, you also
    # need to update the `persist_to_workspace` paths
    # in this job (below) as well as the list of files passed
    # to istanbul-combine in the `report_coverage` job
    parallelism: 5
    steps:
      - restore_cache:
          key: compiled-env-{{ .Environment.CIRCLE_SHA1 }}
      - run:
          name: Set Up Environment Variables
          command: cp .env.default .env
      - run:
          name: Create shared coverage outputs folder
          command: mkdir -p /tmp/coverage
      - run:
          name: Coverage
          command: |
            TEST_FILES="{$(circleci tests glob "./test/**/*.spec.ts" | \
              circleci tests split --split-by=timings | xargs | sed -e 's/ /,/g')}"
            yarn coverage -- --testfiles "$TEST_FILES"
      - run:
          name: Save coverage
          command: |
            cp coverage.json /tmp/coverage/cov_$CIRCLE_NODE_INDEX.json
            chmod -R 777 /tmp/coverage/cov_$CIRCLE_NODE_INDEX.json
      - persist_to_workspace:
          root: /tmp/coverage
          paths:
            - cov_0.json
            - cov_1.json
            - cov_2.json
            - cov_3.json
            - cov_4.json

  report_coverage:
    docker:
      - image: circleci/node:10.11.0
    working_directory: ~/set-protocol-v2
    steps:
      - attach_workspace:
          at: /tmp/coverage
      - restore_cache:
          key: compiled-env-{{ .Environment.CIRCLE_SHA1 }}
      - run:
          name: Combine coverage reports
          command: |
            mkdir -p reports
            cp -R /tmp/coverage/* .
            npx istanbul-combine-updated -r lcov cov_0.json cov_1.json cov_2.json cov_3.json cov_4.json
      - run:
          name: Upload coverage
          command: |
            cat coverage/lcov.info | node_modules/.bin/coveralls

workflows:
  version: 2
  build-and-test:
    jobs:
      - install
      - build:
          requires:
            - install
      - build_ovm:
          requires:
            - install
      - test:
          requires:
            - build
      - test_ovm:
          requires:
            - build_ovm
      - coverage:
          requires:
            - build
      - report_coverage:
          requires:
            - coverage
